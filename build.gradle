buildscript {
    ext.kotlin_version = '1.5.31'
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "https://files.minecraftforge.net/maven"
        }
    }
    dependencies {
        classpath('com.anatawa12.forge:ForgeGradle:1.2-1.0.6') {
            changing = true
        }
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}
//plugins {
//    id "com.anatawa12.jarInJar" version "1.0.1"
//}

configurations {
    embed
    compile.extendsFrom(embed)
}

apply plugin: 'forge'
apply plugin: 'kotlin'

def baseversion = "src1.7.10_20200822"
version = "SNAPSHOT"
group = "com.yourname.modid" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = baseversion + "+" + "KaizPatch" + "X"

minecraft {
    version = "1.7.10-10.13.4.1614-1.7.10"
    runDir = "eclipse"
}

dependencies {
    // you may put jars on which you depend on in ./libs
    // or you may define them like so..
    //compile "some.group:artifact:version:classifier"
    //compile "some.group:artifact:version"

    // real examples
    //compile 'com.mod-buildcraft:buildcraft:6.0.8:dev'  // adds buildcraft to the dev env
    //compile 'com.googlecode.efficient-java-matrix-library:ejml:0.24' // adds ejml to the dev env

    // for more info...
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html
    embed "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    embed 'org.jetbrains:annotations:22.0.0'
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'version': project.version, 'mcversion': project.minecraft.version
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

tasks.withType(Jar) { compileJava.options.encoding = 'UTF-8' }

task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

sourceCompatibility = "1.8"
targetCompatibility = "1.8"

//tasks.embedJarInJar {
//    dependsOn tasks.reobf
//    target = "FMLInCpw"
//    basePackage = "com.github.com.Kai_Z_JP.KaizPatch.jarInJar"
//}

//tasks.assemble {
//    dependsOn tasks.embedJarInJar
//}

jar {
    configurations.embed.each {dep ->
        from(project.zipTree(dep)){
            exclude 'META-INF', 'META-INF/**'
        }
    }

    from(rootDir) {
        include 'README.md'
        include 'LICENCE'
    }
}

repositories {
    mavenCentral()
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
